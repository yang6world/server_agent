syntax = "proto3";

package agent;

option go_package = "module/proto;agent";

service ResourceChecker {
  rpc CheckResources(ResourceRequest) returns (ResourceResponse);
  rpc RunShell(ShellRequest) returns (ShellResponse);
}

message ResourceRequest {
  string token = 1;
}

message ResourceResponse {
  string hostname = 1;
  string os = 2;
  string kernel_version = 3;
  double cpu_usage = 4;
  double memory_usage = 5;
  double swap_usage = 6;
  string disk_usage = 7;
  double load_average = 8;
  bool webshell_supported = 9;
  string start_time = 10;
  repeated string ip_addresses = 11;
  bool docker_available = 12;
  repeated ContainerInfo containers = 13;
}

message ShellRequest {
  string token = 1;
  string command = 2; // 客户端发送的命令
}

message ShellResponse {
  string output = 1; // 命令执行的输出
  string error = 2;  // 命令执行的错误信息
}

message ContainerInfo {
  string id = 1;
  string name = 2;
  string image = 3;
  string status = 4;
}
